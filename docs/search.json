[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "PySchool",
    "section": "",
    "text": "Inicio\nEste espacio ha sido creado con el objetivo de motivar a los estudiantes a conocer y aprender el lenguaje de programaci√≥n Python. Dentro de este repositorio, encontrar√°s ejemplos autocontenidos que te ayudar√°n a entender y practicar los conceptos fundamentales de Python.\nPySchool es una iniciativa de la organizaci√≥n Python Chile y DUOC. Nuestro objetivo es proporcionar a la comunidad los recursos necesarios para aprender y mejorar sus habilidades en Python.\nLa PySchool tendr√° lugar el viernes 2 de Agosto, en DUOC Sede Valpara√≠so, para alumnos invitados de distintos colegios de la V Regi√≥n. Sin embargo, el material est√° disponible en l√≠nea para que cualquier interesado pueda participar.",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Inicio</span>"
    ]
  },
  {
    "objectID": "index.html#programa-de-actividades",
    "href": "index.html#programa-de-actividades",
    "title": "PySchool",
    "section": "Programa de actividades",
    "text": "Programa de actividades\n\n\n\nInicio\nFin\nActividad\n\n\n\n\n9:00\n9:30\nAcreditaci√≥n\n\n\n9:30\n10:15\nBienvenida y panel pythonistas\n\n\n10:30\n11:30\nTaller 1\n\n\n12:00\n13:00\nTaller 2\n\n\n13:00\n1:30\nCierre\n\n\n\nEl taller 1 ser√° com√∫n para todos: Introducci√≥n a Python.\nEl taller 2 puede ser de Python en Ciencias o Python en Ciencia de Datos, seg√∫n hayan elegido.",
    "crumbs": [
      "<span class='chapter-number'>1</span>¬† <span class='chapter-title'>Inicio</span>"
    ]
  },
  {
    "objectID": "talleres/taller_1.html",
    "href": "talleres/taller_1.html",
    "title": "Introducci√≥n a Python",
    "section": "",
    "text": "1. üëã Hola Mundo\nEl cl√°sico primer programa en cualquier lenguaje de programaci√≥n. Imprimiremos ‚ÄúHola, Mundo‚Äù en la pantalla.",
    "crumbs": [
      "Talleres",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Introducci√≥n a Python</span>"
    ]
  },
  {
    "objectID": "talleres/taller_1.html#hola-mundo",
    "href": "talleres/taller_1.html#hola-mundo",
    "title": "Introducci√≥n a Python",
    "section": "",
    "text": "Please enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Talleres",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Introducci√≥n a Python</span>"
    ]
  },
  {
    "objectID": "talleres/taller_1.html#calculadora-b√°sica",
    "href": "talleres/taller_1.html#calculadora-b√°sica",
    "title": "Introducci√≥n a Python",
    "section": "2. üßÆ Calculadora B√°sica",
    "text": "2. üßÆ Calculadora B√°sica\nUna simple calculadora que realiza operaciones b√°sicas como suma, resta, multiplicaci√≥n y divisi√≥n.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Talleres",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Introducci√≥n a Python</span>"
    ]
  },
  {
    "objectID": "talleres/taller_1.html#verificaci√≥n-de-a√±o-bisiesto",
    "href": "talleres/taller_1.html#verificaci√≥n-de-a√±o-bisiesto",
    "title": "Introducci√≥n a Python",
    "section": "3. üìÖ Verificaci√≥n de A√±o Bisiesto",
    "text": "3. üìÖ Verificaci√≥n de A√±o Bisiesto\nUn programa para determinar si un a√±o es bisiesto.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Talleres",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Introducci√≥n a Python</span>"
    ]
  },
  {
    "objectID": "talleres/taller_1.html#adivina-el-n√∫mero",
    "href": "talleres/taller_1.html#adivina-el-n√∫mero",
    "title": "Introducci√≥n a Python",
    "section": "4. üî¢ Adivina el N√∫mero",
    "text": "4. üî¢ Adivina el N√∫mero\nUn juego donde la computadora elige un n√∫mero al azar y el usuario intenta adivinarlo.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Talleres",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Introducci√≥n a Python</span>"
    ]
  },
  {
    "objectID": "talleres/taller_1.html#conjetura-de-collatz",
    "href": "talleres/taller_1.html#conjetura-de-collatz",
    "title": "Introducci√≥n a Python",
    "section": "5. üìú Conjetura de Collatz",
    "text": "5. üìú Conjetura de Collatz\nUn programa que implementa la Conjetura de Collatz, tambi√©n conocida como la conjetura 3n + 1.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Talleres",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Introducci√≥n a Python</span>"
    ]
  },
  {
    "objectID": "talleres/taller_1.html#ejercicios-de-aritm√©tica",
    "href": "talleres/taller_1.html#ejercicios-de-aritm√©tica",
    "title": "Introducci√≥n a Python",
    "section": "6. ‚ûï Ejercicios de Aritm√©tica",
    "text": "6. ‚ûï Ejercicios de Aritm√©tica\n\nSuma de N√∫meros\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nFactorial de un N√∫mero\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Talleres",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Introducci√≥n a Python</span>"
    ]
  },
  {
    "objectID": "talleres/taller_1.html#ejemplos-adicionales",
    "href": "talleres/taller_1.html#ejemplos-adicionales",
    "title": "Introducci√≥n a Python",
    "section": "7. üìö Ejemplos Adicionales",
    "text": "7. üìö Ejemplos Adicionales\n\nConversi√≥n de Temperatura\nUn programa para convertir grados Celsius a Fahrenheit.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nC√°lculo del √çndice de Masa Corporal (IMC)\nUn programa para calcular el IMC de una persona.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nN√∫mero Primo\nUn programa para verificar si un n√∫mero es primo.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Talleres",
      "<span class='chapter-number'>2</span>¬† <span class='chapter-title'>Introducci√≥n a Python</span>"
    ]
  },
  {
    "objectID": "talleres/taller_2.html",
    "href": "talleres/taller_2.html",
    "title": "Python en Ciencia",
    "section": "",
    "text": "1. üî¨ F√≠sica\nPython se usa ampliamente en la f√≠sica para simular sistemas y analizar datos experimentales.",
    "crumbs": [
      "Talleres",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Python en Ciencia</span>"
    ]
  },
  {
    "objectID": "talleres/taller_2.html#f√≠sica",
    "href": "talleres/taller_2.html#f√≠sica",
    "title": "Python en Ciencia",
    "section": "",
    "text": "Simulaci√≥n de Movimiento\nSimulaci√≥n del movimiento de un objeto bajo la influencia de la gravedad usando la biblioteca matplotlib para la visualizaci√≥n:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nSimulaci√≥n de Movimiento Arm√≥nico Simple\nSimulaci√≥n del movimiento de un oscilador arm√≥nico simple:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nLey de Coulomb\nC√°lculo de la fuerza entre dos cargas usando la ley de Coulomb:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Talleres",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Python en Ciencia</span>"
    ]
  },
  {
    "objectID": "talleres/taller_2.html#estad√≠stica-y-probabilidad",
    "href": "talleres/taller_2.html#estad√≠stica-y-probabilidad",
    "title": "Python en Ciencia",
    "section": "2. üìà Estad√≠stica y Probabilidad",
    "text": "2. üìà Estad√≠stica y Probabilidad\nPython proporciona herramientas robustas para el an√°lisis estad√≠stico y la probabilidad, utilizando bibliotecas como pandas, scipy y numpy. Los siguientes ejercicios est√°n dise√±ados para estudiantes de secundaria, simplificando conceptos complejos en ejemplos pr√°cticos y f√°ciles de entender.\n\nGeneraci√≥n de N√∫meros Aleatorios\nGenerar una lista de n√∫meros aleatorios y calcular su media:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nLanzamiento de Moneda\nSimular el lanzamiento de una moneda y calcular la probabilidad de obtener cara o cruz:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nLanzamiento de Dados\nSimular el lanzamiento de dos dados y calcular la frecuencia de cada suma posible:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nProbabilidad Condicional\nCalcular la probabilidad condicional usando un ejemplo de selecci√≥n de bolas de una urna:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Talleres",
      "<span class='chapter-number'>3</span>¬† <span class='chapter-title'>Python en Ciencia</span>"
    ]
  },
  {
    "objectID": "talleres/taller_3.html",
    "href": "talleres/taller_3.html",
    "title": "Python en Ciencia de Datos",
    "section": "",
    "text": "üìä Exploraci√≥n y Visualizaci√≥n de Datos\nPrimero, importemos las bibliotecas necesarias y carguemos el conjunto de datos de Pok√©mon.",
    "crumbs": [
      "Talleres",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Python en Ciencia de Datos</span>"
    ]
  },
  {
    "objectID": "talleres/taller_3.html#exploraci√≥n-y-visualizaci√≥n-de-datos",
    "href": "talleres/taller_3.html#exploraci√≥n-y-visualizaci√≥n-de-datos",
    "title": "Python en Ciencia de Datos",
    "section": "",
    "text": "Cargar el Conjunto de Datos\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nDescripci√≥n del Conjunto de Datos\nObtener una visi√≥n general de las estad√≠sticas del conjunto de datos.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Talleres",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Python en Ciencia de Datos</span>"
    ]
  },
  {
    "objectID": "talleres/taller_3.html#an√°lisis-y-visualizaci√≥n-de-datos",
    "href": "talleres/taller_3.html#an√°lisis-y-visualizaci√≥n-de-datos",
    "title": "Python en Ciencia de Datos",
    "section": "üìà An√°lisis y Visualizaci√≥n de Datos",
    "text": "üìà An√°lisis y Visualizaci√≥n de Datos\n\nTipos de Pok√©mon\nVeamos cu√°ntos Pok√©mon de cada tipo hay en el conjunto de datos.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nEstad√≠sticas de Ataque y Defensa\nComparar las estad√≠sticas de ataque y defensa de los Pok√©mon.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nPromedio de Estad√≠sticas por Tipo\nCalcular y visualizar el promedio de las estad√≠sticas principales de los Pok√©mon agrupados por tipo.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nPeso y Altura de los Pok√©mon\nExplorar la relaci√≥n entre el peso y la altura de los Pok√©mon (utilizando las estad√≠sticas de Weight y Height si estuvieran disponibles).\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Talleres",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Python en Ciencia de Datos</span>"
    ]
  },
  {
    "objectID": "talleres/taller_3.html#tablas-y-gr√°ficos-interactivos",
    "href": "talleres/taller_3.html#tablas-y-gr√°ficos-interactivos",
    "title": "Python en Ciencia de Datos",
    "section": "üìä Tablas y Gr√°ficos Interactivos",
    "text": "üìä Tablas y Gr√°ficos Interactivos\n\nTabla de Pok√©mon con Mayor Ataque\nMostrar los 10 Pok√©mon con la mayor estad√≠stica de ataque.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\n\nTabla de Pok√©mon con Mayor Defensa\nMostrar los 10 Pok√©mon con la mayor estad√≠stica de defensa.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.",
    "crumbs": [
      "Talleres",
      "<span class='chapter-number'>4</span>¬† <span class='chapter-title'>Python en Ciencia de Datos</span>"
    ]
  },
  {
    "objectID": "anexos/seguir_aprendiendo.html",
    "href": "anexos/seguir_aprendiendo.html",
    "title": "Seguir aprendiendo",
    "section": "",
    "text": "Recursos recomendados üìö",
    "crumbs": [
      "Anexos",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Seguir aprendiendo</span>"
    ]
  },
  {
    "objectID": "anexos/seguir_aprendiendo.html#recursos-recomendados",
    "href": "anexos/seguir_aprendiendo.html#recursos-recomendados",
    "title": "Seguir aprendiendo",
    "section": "",
    "text": "Cursos en L√≠nea\n\nCoursera: Cursos como ‚ÄúPython for Everybody‚Äù de la Universidad de M√≠chigan.\nedX: Programas de certificaci√≥n profesional como ‚ÄúProgramming for Everybody‚Äù del MIT.\nUdemy: Cursos completos, desde lo b√°sico hasta temas avanzados como ‚ÄúComplete Python Bootcamp‚Äù.\n\nPlataformas Interactivas\n\nCodecademy: Curso interactivo de Python para principiantes.\nDataCamp: Cursos especializados en Python para ciencia de datos.\n\nDocumentaci√≥n Oficial y Recursos Comunitarios\n\nDocumentaci√≥n de Python: La fuente m√°s confiable y detallada para aprender Python.\nStack Overflow: Comunidad activa para resolver dudas.\nGitHub: Repositorios de proyectos de c√≥digo abierto en Python.\n\nLibros Recomendados\n\n‚ÄúAutomate the Boring Stuff with Python‚Äù de Al Sweigart.\n‚ÄúPython Crash Course‚Äù de Eric Matthes.\n‚ÄúFluent Python‚Äù de Luciano Ramalho.",
    "crumbs": [
      "Anexos",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Seguir aprendiendo</span>"
    ]
  },
  {
    "objectID": "anexos/seguir_aprendiendo.html#consejos-para-aprender-python",
    "href": "anexos/seguir_aprendiendo.html#consejos-para-aprender-python",
    "title": "Seguir aprendiendo",
    "section": "Consejos para Aprender Python",
    "text": "Consejos para Aprender Python\n\nPracticar regularmente\n\nEscribe c√≥digo todos los d√≠as, incluso si es por poco tiempo.\n\nParticipar en proyectos reales\n\nContribuye a proyectos de c√≥digo abierto en GitHub o crea tus propios proyectos.\n\nResolver ejercicios y retos\n\nPlataformas como LeetCode, HackerRank, y CodeWars ofrecen retos de programaci√≥n.\n\nUnirse a comunidades\n\nParticipa en comunidades como r/learnpython en Reddit y Python Discord.\n\nMantenerse Actualizado\n\nSigue aprendiendo sobre nuevas versiones y mejores pr√°cticas a trav√©s de blogs, conferencias y webinars.\n\n\nCon estos recursos y consejos, estar√°s en el camino correcto para dominar Python y aplicarlo en tus proyectos y carrera profesional.",
    "crumbs": [
      "Anexos",
      "<span class='chapter-number'>5</span>¬† <span class='chapter-title'>Seguir aprendiendo</span>"
    ]
  },
  {
    "objectID": "anexos/tecnologia.html",
    "href": "anexos/tecnologia.html",
    "title": "Sobre la p√°gina",
    "section": "",
    "text": "Esta p√°gina fue creada con quarto y la extensi√≥n quarto-pyodide\n\n\n\nFiltro quarto-pyodide en acci√≥n\n\n\nPuedes ver el ejemplo completo de la extensi√≥n en acci√≥n aqu√≠.",
    "crumbs": [
      "Anexos",
      "<span class='chapter-number'>6</span>¬† <span class='chapter-title'>Sobre la p√°gina</span>"
    ]
  },
  {
    "objectID": "anexos/autoria_y_colaborar.html",
    "href": "anexos/autoria_y_colaborar.html",
    "title": "üìú Autor√≠a",
    "section": "",
    "text": "Reconocimientos Adicionales\nAdem√°s, queremos reconocer a todos los colaboradores y miembros de la comunidad que han contribuido con ideas, sugerencias y c√≥digo, ayudando a mejorar y expandir este proyecto. Su participaci√≥n es invaluable y profundamente apreciada.\nSi deseas conocer m√°s sobre los autores y colaboradores, o c√≥mo puedes contribuir t√∫ tambi√©n, visita la p√°gina oficial de Python Chile. ¬°Gracias por apoyar y ser parte de nuestra comunidad!",
    "crumbs": [
      "Anexos",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>üìú Autor√≠a</span>"
    ]
  },
  {
    "objectID": "anexos/autoria_y_colaborar.html#colaborar",
    "href": "anexos/autoria_y_colaborar.html#colaborar",
    "title": "üìú Autor√≠a",
    "section": "Colaborar",
    "text": "Colaborar",
    "crumbs": [
      "Anexos",
      "<span class='chapter-number'>7</span>¬† <span class='chapter-title'>üìú Autor√≠a</span>"
    ]
  },
  {
    "objectID": "prefacio/intro_progra.html",
    "href": "prefacio/intro_progra.html",
    "title": "üíª Sobre Programaci√≥n",
    "section": "",
    "text": "Introducci√≥n\nSi tuvi√©ramos que resumir el prop√≥sito de la programaci√≥n en una frase, ser√≠a:\nLas computadoras son expertas en llevar a cabo tareas rutinarias. Idealmente, cualquier labor tediosa y repetitiva deber√≠a ser delegada a una computadora, permitiendo as√≠ que los humanos se enfoquen en los problemas verdaderamente interesantes: aquellos que demandan creatividad, pensamiento cr√≠tico y subjetividad.\nLa programaci√≥n es el proceso de traducir un enfoque para resolver problemas en t√©rminos comprensibles para la computadora.\nAdem√°s, la programaci√≥n abarca una amplia gama de lenguajes y paradigmas, cada uno con sus propias caracter√≠sticas y aplicaciones. Desde los cl√°sicos como C y Java hasta los modernos como Python y JavaScript, cada lenguaje tiene sus fortalezas y debilidades, y la elecci√≥n del lenguaje adecuado depende del contexto y los requisitos del proyecto.\nLa programaci√≥n no se limita solo a escribir c√≥digo. Tambi√©n implica planificaci√≥n, dise√±o y depuraci√≥n de software. Los programadores deben comprender los requisitos del usuario, dise√±ar soluciones eficientes y depurar errores para garantizar que el software funcione correctamente.",
    "crumbs": [
      "Refactor-me",
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>üíª Sobre Programaci√≥n</span>"
    ]
  },
  {
    "objectID": "prefacio/intro_progra.html#introducci√≥n",
    "href": "prefacio/intro_progra.html#introducci√≥n",
    "title": "üíª Sobre Programaci√≥n",
    "section": "",
    "text": "‚ÄúSe dice que uno no comprende verdaderamente algo hasta que puede explic√°rselo a otro. En realidad, uno no lo entiende completamente hasta que puede explic√°rselo a una computadora.‚Äù ‚Äì Donald Knuth\n\n\n\n‚ÄúAutomatizar tareas para que la computadora las realice por nosotros.",
    "crumbs": [
      "Refactor-me",
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>üíª Sobre Programaci√≥n</span>"
    ]
  },
  {
    "objectID": "prefacio/intro_progra.html#algoritmos",
    "href": "prefacio/intro_progra.html#algoritmos",
    "title": "üíª Sobre Programaci√≥n",
    "section": "Algoritmos",
    "text": "Algoritmos\n\n\n\n\n‚ÄúLa inform√°tica se trata de computadores tanto como la astronom√≠a se trata de telescopios.‚Äù ‚Äì Edsger Dijkstra\n\nAl dise√±ar un programa, el desaf√≠o principal es crear y describir un procedimiento que est√© completamente bien definido, sin ambig√ºedades, y que efectivamente resuelva el problema.\nPor tanto, la programaci√≥n no se centra tanto en los computadores como en resolver problemas de manera estructurada. Su objeto de estudio principal son los algoritmos.\nUn algoritmo es un procedimiento bien definido para resolver un problema. Todos utilizamos algoritmos a diario, incluso sin darnos cuenta:\na) Receta de cocina\nUna receta de cocina es un ejemplo de algoritmo; aunque algunos pasos puedan parecer ambiguos (¬øcu√°nto es ¬´una pizca de sal¬ª? ¬øqu√© significa ¬´agregar a gusto¬ª?), en general las instrucciones est√°n lo suficientemente bien definidas para seguirlas sin problemas.\nLa entrada de una receta son los ingredientes y ciertos datos como: ¬øpara cu√°ntas personas se est√° cocinando? El proceso es la serie de pasos para manipular los ingredientes. La salida es el plato terminado.\nEn principio, si una receta est√° suficientemente bien explicada, cualquiera podr√≠a preparar el plato incluso sin conocimientos previos de cocina.\nb) M√©todo de multiplicaci√≥n\nEl m√©todo para multiplicar n√∫meros a mano que aprendemos en la escuela es otro ejemplo de algoritmo. Siguiendo paso a paso el procedimiento, siempre obtendremos el producto.\nLa entrada del algoritmo de multiplicaci√≥n son los dos factores. El proceso consiste en una secuencia de pasos donde los d√≠gitos se multiplican, las reservas se suman, y los productos intermedios se suman finalmente. La salida del algoritmo es el producto obtenido.\n\nComponentes de un algoritmo\nConceptualmente, un algoritmo consta de tres elementos principales:\n\nEntrada: Representa los datos iniciales o inputs que el algoritmo utilizar√° para llevar a cabo su tarea.\nProceso: Consiste en la serie de pasos l√≥gicos y operaciones que el algoritmo realiza utilizando la entrada para producir un resultado.\nSalida: Es el resultado final o output que proporciona el algoritmo despu√©s de ejecutar el proceso.\n\nEl proceso se describe mediante una secuencia ordenada de instrucciones. Adem√°s, puede incluir estructuras como ciclos, que repiten un conjunto de instrucciones un n√∫mero determinado de veces, y condicionales, que determinan qu√© conjunto de instrucciones se ejecutar√°n seg√∫n ciertas condiciones.\n\n\nC√≥mo describir un algoritmo\nConsideremos un ejemplo sencillo: un algoritmo para resolver ecuaciones cuadr√°ticas.\nUna ecuaci√≥n cuadr√°tica es una ecuaci√≥n de la forma \\(ax^2+bx+c=0\\), donde \\(a, b\\) y \\(c\\) son datos dados, con \\(a\\neq0\\), y \\(x\\) es la inc√≥gnita cuyo valor que se desea determinar.\nPor ejemplo, \\(2x^2‚àí5x+2=0\\) es una ecuaci√≥n cuadr√°tica con \\(a=2\\), \\(b=‚àí5\\) y \\(c=2\\). Sus soluciones son \\(x_1=1/2\\) y \\(x_2=2\\), como se puede comprobar f√°cilmente al reemplazar estos valores en la ecuaci√≥n. El problema es c√≥mo obtener estos valores en primer lugar.\nEl problema computacional de resolver una ecuaci√≥n cuadr√°tica puede ser planteado as√≠:\n\nDados \\(a, b\\) y \\(c\\), entontrar los valores reales de \\(x\\) que satisfacen \\(ax^2+bx+c=0\\).\n\nLa entrada del algoritmo, pues, son los valores \\(a, b\\) y \\(c\\), y la salida son las ra√≠ces reales \\(x\\) (que pueden ser cero, una o dos) de la ecuaci√≥n. En un programa computacional, los valores de \\(a, b\\) y \\(c\\) deber√≠an ser ingresados usando el teclado, y las soluciones \\(x\\) deber√≠an ser mostradas a continuaci√≥n en la pantalla.\nAl estudiar √°lgebra aprendemos un algoritmo para resolver este problema. Es lo suficientemente detallado para que pueda usarlo cualquier persona, incluso sin saber qu√© es una ecuaci√≥n cuadr√°tica, o para que lo pueda hacer un computador. A continuaci√≥n veremos algunas maneras de describir el procedimiento.\nLenguaje natural\nDurante el proceso mental de dise√±ar un algoritmo, es com√∫n pensar y describir los pasos en la misma manera en que hablamos a diario. Por ejemplo:\n\nTeniendo los valores de \\(a, b\\) y \\(c\\), calcular el discriminante \\(D=b^2‚àí4ac\\). Si es discriminante es negativo, entonces la ecuaci√≥n no tiene soluciones reales. Si es discriminante es igual a cero, entonces la ecuaci√≥n tiene una √∫nica soluci√≥n real, que es \\(x=‚àíb/2a\\). Si el discriminante es positivo, entonces la ecuaci√≥n tiene dos soluciones reales, que son \\(x_1=(‚àíb‚àí\\sqrt{D})/2a\\) y \\(x_2=(‚àíb+\\sqrt{D})/2a\\).\n\nEsta manera de expresar un algoritmo no es ideal, ya que el lenguaje natural es:\n\nimpreciso: puede tener ambig√ºedades;\nno universal: personas distintas describir√°n el proceso de maneras distintas; y\nno estructurado: la descripci√≥n no est√° expresada en funci√≥n de componentes simples.\n\nA√∫n as√≠, es posible identificar los pasos del algoritmo. Por ejemplo, hay que evaluar la expresi√≥n \\(b^2‚àí4ac\\), y ponerle el nombre \\(D\\) a su resultado. Esto se llama asignaci√≥n, y es un tipo de instrucci√≥n que aparece en casi todos los algoritmos. Despu√©s de eso, el algoritmo puede usar el nombre \\(D\\) para referirse al valor calculado.\nDiagrama de flujo Un diagrama de flujo es una representaci√≥n gr√°fica de un algoritmo. Los pasos son representados por varios tipos de bloques, y el flujo de ejecuci√≥n es indicado por flechas que conectan los bloques:\n\n\n\nEl inicio y el final del algoritmo son representados con bloques circulares. El algoritmo siempre debe ser capaz llegar desde uno hasta el otro, sin importar por qu√© camino lo hace. Un algoritmo no puede ¬´quedarse pegado¬ª en la mitad.\nLa entrada y la salida de datos son representadas con romboides, que en la figura de arriba est√°n pintados de verde.\nLos diamantes representan condiciones en las que el algoritmo sigue uno de dos caminos. que est√°n etiquetados con s√≠ o no, dependiendo si la condici√≥n es verdadera o falsa.\nTambi√©n puede haber ciclos, representados por flechas que regresan a bloques anteriores. En este ejemplo, no hay ciclos.\nOtras sentencias van dentro de rect√°ngulos, que en la figura est√°n pintados de azul. En este ejemplo, las sentencias son asignaciones, representadas en la forma nombre = valor.\nLos diagramas de flujo no son usados en la pr√°ctica para programar, pero son √∫tiles para ilustrar c√≥mo funcionan algoritmos sencillos.\nPseudoc√≥digo\nEl pseudoc√≥digo es una descripci√≥n estructurada de un algoritmo basada en ciertas convenciones notacionales. Si bien es muy parecido al c√≥digo que finalmente se escribir√° en el computador, el pseudoc√≥digo est√° pensado para ser le√≠do por humanos.\nUna manera de escribir el algoritmo para la ecuaci√≥n cuadr√°tica en pseudoc√≥digo es la siguiente:\nleer a\nleer b\nleer c\n\ndiscriminante = b¬≤ - 4ac\n\nsi discriminante &lt; 0:\n    escribir 'La ecuaci√≥n no tiene soluciones reales'\n\no si no, si discriminante = 0:\n    x = -b / 2a\n    escribir 'La soluci√≥n √∫nica es', x\n\no si no:\n    x1 = (-b - ‚àödiscriminante) / 2a\n    x2 = (-b + ‚àödiscriminante) / 2a\n    escribir 'Las dos soluciones reales son:'\n    escribir x1\n    escribir x2\nLas l√≠neas que comienzan con leer y escribir denotan, respectivamente, la entrada y la salida del programa. Los diferentes casos son representados usando sentencias si y o si no. Las asignaciones siguen la misma notaci√≥n que en el caso de los diagramas de flujo.\nLa notaci√≥n de pseudoc√≥digo es bien liberal. Uno puede mezclar notaci√≥n de matem√°ticas con frases en espa√±ol, siempre que quede absolutamente claro para el lector qu√© representa cada una de las l√≠neas del algoritmo.\nC√≥digo\nEl producto final de la programaci√≥n siempre debe ser c√≥digo que pueda ser ejecutado en el computador. Esto requiere describir los algoritmos en un lenguaje de programaci√≥n. Los lenguajes de programaci√≥n definen un conjunto limitado de conceptos b√°sicos, en funci√≥n de los cuales uno puede expresar cualquier algoritmo.\nEn esta asignatura, usaremos el lenguaje de programaci√≥n Python para escribir nuestros programas.\nEl c√≥digo en Python para resolver la ecuaci√≥n cuadr√°tica es el siguiente:\na = float(raw_input('Ingrese a: '))\nb = float(raw_input('Ingrese b: '))\nc = float(raw_input('Ingrese c: '))\n\ndiscriminante = b ** 2 - 4 * a * c\nif discriminante &lt; 0:\n    print 'La ecuacion no tiene soluciones reales'\nelif discriminante == 0:\n    x = -b / (2 * a)\n    print 'La solucion unica es x =', x\nelse:\n    x1 = (-b - (discriminante ** 0.5)) / (2 * a)\n    x2 = (-b + (discriminante ** 0.5)) / (2 * a)\n    print 'Las dos soluciones reales son:'\n    print 'x1 =', x1\n    print 'x2 =', x2\n\nraw_input()\nA partir de ahora, usted aprender√° a entender, escribir y ejecutar c√≥digos como √©ste.",
    "crumbs": [
      "Refactor-me",
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>üíª Sobre Programaci√≥n</span>"
    ]
  },
  {
    "objectID": "prefacio/intro_progra.html#referencias",
    "href": "prefacio/intro_progra.html#referencias",
    "title": "üíª Sobre Programaci√≥n",
    "section": "Referencias",
    "text": "Referencias\n\nProgramaci√≥n - USM",
    "crumbs": [
      "Refactor-me",
      "<span class='chapter-number'>8</span>¬† <span class='chapter-title'>üíª Sobre Programaci√≥n</span>"
    ]
  },
  {
    "objectID": "prefacio/intro_python.html",
    "href": "prefacio/intro_python.html",
    "title": "üêç Sobre Python",
    "section": "",
    "text": "Popularidad\nPython es uno de los lenguajes de programaci√≥n m√°s populares y ampliamente utilizados en la actualidad. Seg√∫n los √≠ndices de popularidad de lenguajes de programaci√≥n, Python ha estado en constante aumento en popularidad en los √∫ltimos a√±os.\nEl √≠ndice TIOBE, que mide la popularidad de los lenguajes de programaci√≥n seg√∫n la frecuencia con la que se buscan en los motores de b√∫squeda, ha situado a Python entre los tres lenguajes de programaci√≥n m√°s populares en los √∫ltimos a√±os, despu√©s de Java y C.\nAdem√°s, seg√∫n la encuesta anual Stack Overflow Developer Survey 2023, Python se ubic√≥ entre los cinco lenguajes de programaci√≥n m√°s populares. Este lenguaje tambi√©n ha ganado una notable popularidad en campos como la ciencia de datos y el aprendizaje autom√°tico, consolid√°ndose como una herramienta indispensable para profesionales y entusiastas de estas √°reas.",
    "crumbs": [
      "Refactor-me",
      "<span class='chapter-number'>9</span>¬† <span class='chapter-title'>üêç Sobre Python</span>"
    ]
  },
  {
    "objectID": "prefacio/intro_python.html#popularidad",
    "href": "prefacio/intro_python.html#popularidad",
    "title": "üêç Sobre Python",
    "section": "",
    "text": "¬øEs buena la popularidad de Python?\nS√≠, la popularidad de Python es una se√±al de su relevancia en el mundo de la programaci√≥n y puede tener varias ventajas para los usuarios y la comunidad en general.\nEn primer lugar, una mayor popularidad significa que hay una amplia comunidad de desarrolladores y usuarios de Python en todo el mundo, lo que hace que sea m√°s f√°cil encontrar recursos, soporte y ayuda en l√≠nea. Adem√°s, una gran comunidad de usuarios tambi√©n implica que hay una gran cantidad de bibliotecas y m√≥dulos disponibles, lo que permite a los usuarios aprovechar el c√≥digo existente y acelerar el desarrollo.\nEn segundo lugar, la popularidad de Python lo convierte en una habilidad valiosa en el mercado laboral, con una amplia gama de oportunidades de carrera en diferentes sectores, incluyendo la ciencia de datos, la inteligencia artificial, el desarrollo web, la automatizaci√≥n y la programaci√≥n de sistemas.\nPor √∫ltimo, la popularidad de Python tambi√©n puede significar que hay una gran inversi√≥n en su desarrollo y mejora continua, lo que resulta en una mayor calidad y eficiencia del lenguaje de programaci√≥n.\nEn general, la popularidad de Python es una buena se√±al y es una de las razones por las que se ha convertido en un lenguaje de programaci√≥n tan popular y utilizado en todo el mundo.",
    "crumbs": [
      "Refactor-me",
      "<span class='chapter-number'>9</span>¬† <span class='chapter-title'>üêç Sobre Python</span>"
    ]
  },
  {
    "objectID": "prefacio/intro_python.html#librer√≠as-y-frameworks",
    "href": "prefacio/intro_python.html#librer√≠as-y-frameworks",
    "title": "üêç Sobre Python",
    "section": "Librer√≠as y frameworks",
    "text": "Librer√≠as y frameworks\n\n\n\nUna gran ventaja de Python es la amplia selecci√≥n de librer√≠as y frameworks que ofrece.\nHay librer√≠as para distintos t√≥picos:\n\nManipulaci√≥n de datos\nVisualizaci√≥n de datos\nAprendizaje autom√°tico\nCiencia de los datos\nProcesamiento natural del lenguaje\nBig Data\n\nLo mismo es cierto para los frameworks, que ayudan a despegar su proyecto y le ahorran tiempo y esfuerzo. Hay una variedad de marcos para elegir, dependiendo de sus necesidades, por ejemplo, para el desarrollo web tenemos:\n\nDjango: Es un framework de Python que se utiliza para el desarrollo de aplicaciones web. Ofrece una arquitectura de modelo-vista-controlador (MVC) y herramientas para la administraci√≥n de bases de datos, la autenticaci√≥n y la seguridad.\nFlask: Es un framework de Python que se utiliza para el desarrollo de aplicaciones web de menor escala y m√°s simples. Ofrece una amplia gama de herramientas y extensiones para la creaci√≥n de aplicaciones web.",
    "crumbs": [
      "Refactor-me",
      "<span class='chapter-number'>9</span>¬† <span class='chapter-title'>üêç Sobre Python</span>"
    ]
  },
  {
    "objectID": "prefacio/intro_python.html#performance",
    "href": "prefacio/intro_python.html#performance",
    "title": "üêç Sobre Python",
    "section": "Performance",
    "text": "Performance\nPython es un lenguaje de programaci√≥n interpretado de alto nivel, lo que significa que su rendimiento puede ser m√°s lento que otros lenguajes de programaci√≥n de menor nivel, como C o C++. Sin embargo, Python ofrece varias t√©cnicas y herramientas para mejorar el rendimiento y la eficiencia de sus programas. Aqu√≠ hay algunas de ellas:\n\nCompilaci√≥n JIT: Python ofrece la opci√≥n de utilizar un compilador Just-In-Time (JIT), como PyPy, que puede mejorar significativamente el rendimiento de los programas al compilar el c√≥digo en tiempo de ejecuci√≥n.\nCPython: Python tambi√©n se puede ejecutar en una implementaci√≥n de C llamada CPython, lo que puede mejorar el rendimiento de algunos programas.\nUso de bibliotecas nativas: Python ofrece la capacidad de usar bibliotecas nativas, como NumPy, que est√°n escritas en lenguajes de bajo nivel como C y Fortran para realizar operaciones num√©ricas de manera m√°s eficiente.\nUso de estructuras de datos eficientes: Python ofrece varias estructuras de datos, como las listas y los diccionarios, que se pueden usar de manera eficiente para mejorar el rendimiento de los programas.\nUso de algoritmos eficientes: El uso de algoritmos eficientes tambi√©n puede mejorar significativamente el rendimiento de los programas en Python.\n\nEn general, Python puede ofrecer un buen rendimiento en comparaci√≥n con otros lenguajes de programaci√≥n interpretados, y hay varias t√©cnicas y herramientas disponibles para mejorar a√∫n m√°s su rendimiento y eficiencia. Sin embargo, es importante recordar que el rendimiento depender√° en gran medida del uso que se le d√© al lenguaje y de c√≥mo se escriban los programas.",
    "crumbs": [
      "Refactor-me",
      "<span class='chapter-number'>9</span>¬† <span class='chapter-title'>üêç Sobre Python</span>"
    ]
  },
  {
    "objectID": "prefacio/intro_python.html#referencia",
    "href": "prefacio/intro_python.html#referencia",
    "title": "üêç Sobre Python",
    "section": "Referencia",
    "text": "Referencia\n\nTutorial de Python 3.8 documentation",
    "crumbs": [
      "Refactor-me",
      "<span class='chapter-number'>9</span>¬† <span class='chapter-title'>üêç Sobre Python</span>"
    ]
  }
]